-- ========================================
-- FIX AI RECOMMENDATIONS DATABASE MIGRATION
-- ========================================
-- Safely updates the recommendations table to support AI-generated recommendations
-- This script handles cases where some columns may already exist

-- Check and add ai_generated column if it doesn't exist
SET @sql = (SELECT IF(
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS 
     WHERE TABLE_SCHEMA = 'gradegoal' 
     AND TABLE_NAME = 'recommendations' 
     AND COLUMN_NAME = 'ai_generated') = 0,
    'ALTER TABLE `recommendations` ADD COLUMN `ai_generated` tinyint(1) DEFAULT 0 COMMENT ''Whether this recommendation was generated by AI''',
    'SELECT ''Column ai_generated already exists'' as message'
));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- Check and add ai_confidence column if it doesn't exist
SET @sql = (SELECT IF(
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS 
     WHERE TABLE_SCHEMA = 'gradegoal' 
     AND TABLE_NAME = 'recommendations' 
     AND COLUMN_NAME = 'ai_confidence') = 0,
    'ALTER TABLE `recommendations` ADD COLUMN `ai_confidence` decimal(3,2) DEFAULT NULL COMMENT ''AI confidence score (0.00-1.00)''',
    'SELECT ''Column ai_confidence already exists'' as message'
));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- Check and add ai_model column if it doesn't exist
SET @sql = (SELECT IF(
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS 
     WHERE TABLE_SCHEMA = 'gradegoal' 
     AND TABLE_NAME = 'recommendations' 
     AND COLUMN_NAME = 'ai_model') = 0,
    'ALTER TABLE `recommendations` ADD COLUMN `ai_model` varchar(100) DEFAULT NULL COMMENT ''AI model used for generation''',
    'SELECT ''Column ai_model already exists'' as message'
));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- Check and add ai_prompt_hash column if it doesn't exist
SET @sql = (SELECT IF(
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS 
     WHERE TABLE_SCHEMA = 'gradegoal' 
     AND TABLE_NAME = 'recommendations' 
     AND COLUMN_NAME = 'ai_prompt_hash') = 0,
    'ALTER TABLE `recommendations` ADD COLUMN `ai_prompt_hash` varchar(64) DEFAULT NULL COMMENT ''Hash of the prompt used for generation''',
    'SELECT ''Column ai_prompt_hash already exists'' as message'
));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- Check and add expires_at column if it doesn't exist
SET @sql = (SELECT IF(
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS 
     WHERE TABLE_SCHEMA = 'gradegoal' 
     AND TABLE_NAME = 'recommendations' 
     AND COLUMN_NAME = 'expires_at') = 0,
    'ALTER TABLE `recommendations` ADD COLUMN `expires_at` timestamp NULL DEFAULT NULL COMMENT ''When this recommendation expires''',
    'SELECT ''Column expires_at already exists'' as message'
));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- Check and add metadata column if it doesn't exist
SET @sql = (SELECT IF(
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS 
     WHERE TABLE_SCHEMA = 'gradegoal' 
     AND TABLE_NAME = 'recommendations' 
     AND COLUMN_NAME = 'metadata') = 0,
    'ALTER TABLE `recommendations` ADD COLUMN `metadata` json DEFAULT NULL COMMENT ''Additional AI metadata''',
    'SELECT ''Column metadata already exists'' as message'
));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- Add indexes if they don't exist
SET @sql = (SELECT IF(
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.STATISTICS 
     WHERE TABLE_SCHEMA = 'gradegoal' 
     AND TABLE_NAME = 'recommendations' 
     AND INDEX_NAME = 'idx_ai_generated') = 0,
    'ALTER TABLE `recommendations` ADD INDEX `idx_ai_generated` (`ai_generated`)',
    'SELECT ''Index idx_ai_generated already exists'' as message'
));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @sql = (SELECT IF(
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.STATISTICS 
     WHERE TABLE_SCHEMA = 'gradegoal' 
     AND TABLE_NAME = 'recommendations' 
     AND INDEX_NAME = 'idx_ai_confidence') = 0,
    'ALTER TABLE `recommendations` ADD INDEX `idx_ai_confidence` (`ai_confidence`)',
    'SELECT ''Index idx_ai_confidence already exists'' as message'
));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @sql = (SELECT IF(
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.STATISTICS 
     WHERE TABLE_SCHEMA = 'gradegoal' 
     AND TABLE_NAME = 'recommendations' 
     AND INDEX_NAME = 'idx_ai_model') = 0,
    'ALTER TABLE `recommendations` ADD INDEX `idx_ai_model` (`ai_model`)',
    'SELECT ''Index idx_ai_model already exists'' as message'
));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @sql = (SELECT IF(
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.STATISTICS 
     WHERE TABLE_SCHEMA = 'gradegoal' 
     AND TABLE_NAME = 'recommendations' 
     AND INDEX_NAME = 'idx_created_ai') = 0,
    'ALTER TABLE `recommendations` ADD INDEX `idx_created_ai` (`created_at`, `ai_generated`)',
    'SELECT ''Index idx_created_ai already exists'' as message'
));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- Update existing recommendations to mark them as non-AI if ai_generated is NULL
UPDATE `recommendations` 
SET `ai_generated` = 0 
WHERE `ai_generated` IS NULL;

COMMIT;
